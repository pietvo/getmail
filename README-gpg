getmail-gmail-xoauth-tokens-gpg is an adapted version of getmail-gmail-xoauth-tokens that adds gpg encryption to the <mailbox>.json setup file.

As https://www.bytereef.org/howto/oauth2/getmail.html states about getmail-gmail-xoauth-tokens:
The resulting setup is not more secure than a regular getmailrc with 0600 permissions.

I wanted to get the additional protection where on my Mac all the passwords would be stored in the MacOS keychain.
The <mailbox>.json file that uses contains a secret token that has the same function as a password.

So with getmail-gmail-xoauth-tokens-gpg you can encrypt that file with a public gpg key that you own, and the script will decrypt is. I chose to create a seprate key for this purpose. Of course you will have to supply the password of the secret key, but on my Mac, I can choose to have that password stored in the Keychain. I put it in the same Keychain as my other getmail passwords, and that Keychain is protected by a master password, which I then (usually) have to supply only once after login.

The script is called as: getmail-gmail-xoauth-tokens-gpg <mailbox.json.gpg> <gpg-key-user-id>.
It also works with --init; it then decrypts the file, updates it and re-encrypts it.

Typical setup of rcfile:

[retriever]
type = SimpleIMAPSSLRetriever
server = outlook.office365.com
username = <email-address>
use_xoauth2 = True
password_command = ("getmail-gmail-xoauth-tokens-gpg", "/Users/<user>/.getmail/<mailbox>.json.gpg", "<user-id>")

etc.


